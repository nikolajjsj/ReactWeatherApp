{"version":3,"sources":["weather.jsx","App.js","index.js","assets/city.jpg"],"names":["API_KEY","process","BASE_URL","Weather","useState","weather","setWeather","forecast","setForecast","location","setLocation","useEffect","fetchData","url","a","fetch","res","status","json","fetchForecast","undefined","className","LeftPart","RightPart","description","temp","iconId","icon","onSubmit","e","preventDefault","target","elements","value","handleSubmit","type","placeholder","name","src","alt","toFixed","city","forecastFiltered","filter","array","index","dateSunrise","Date","dateSunset","sunrise","getUTCHours","getUTCMinutes","sunset","windspeed","winddeg","tempMax","tempMin","map","SmallCard","key","day","substring","BigCard","title","first","second","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.74c9ae5a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport city from './assets/city.jpg'\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/'\n\nexport default function Weather() {\n  const [weather, setWeather] = useState()\n  const [forecast, setForecast] = useState()\n  const [location, setLocation] = useState('Aarhus')\n\n  useEffect(() => {\n    const fetchData = async (url) => {\n      const res = await fetch(url)\n      if (res.status === 200) setWeather(await res.json())\n    }\n    const fetchForecast = async (url) => {\n      const res = await fetch(url)\n      if (res.status === 200) setForecast(await res.json())\n    }\n    fetchForecast(`${BASE_URL}forecast?q=${location}&appid=${API_KEY}`)\n    fetchData(`${BASE_URL}weather?q=${location}&appid=${API_KEY}`)\n  }, [location])\n\n  return (\n    <>\n      {forecast !== undefined ? (\n        <div className='weather-main'>\n          <LeftPart\n            weather={weather}\n            location={location}\n            setLocation={setLocation}\n          />\n          <RightPart forecast={forecast} weather={weather} />\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nfunction LeftPart({ weather, location, setLocation }) {\n  const description = weather['weather'][0]['description']\n  const temp = weather['main']['temp'] // kelvin\n  const iconId = weather['weather'][0]['icon']\n  const icon = `http://openweathermap.org/img/wn/${iconId}@2x.png`\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setLocation(e.target.elements.location.value)\n  }\n\n  return (\n    <div className='weather-left'>\n      <div className='location-search'>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <input\n            type='text'\n            placeholder='Search for places...'\n            name='location'\n          />\n          <input type='submit' value='Fetch' />\n        </form>\n      </div>\n      <img className='weather-left-icon' src={icon} alt='Weather icon' />\n      <div className='weather-left-details'>\n        <h1>{(temp - 273.15).toFixed(1)} C</h1>\n        <hr />\n        <b>{description + ' - '}</b>\n        <span>{location}</span>\n      </div>\n      <img className='weather-left-image' src={city} alt='City' />\n    </div>\n  )\n}\n\nfunction RightPart({ forecast, weather }) {\n  const forecastFiltered = forecast['list'].filter(\n    (array, index) => index % 8 === 0\n  )\n\n  const dateSunrise = new Date(weather['sys']['sunrise'] * 1000)\n  const dateSunset = new Date(weather['sys']['sunset'] * 1000)\n\n  //sys\n  const sunrise = `${dateSunrise.getUTCHours()}:${dateSunrise.getUTCMinutes()}`\n  const sunset = `${dateSunset.getUTCHours()}:${dateSunset.getUTCMinutes()}`\n  const windspeed = weather['wind']['speed']\n  const winddeg = weather['wind']['deg']\n  const tempMax = weather['main']['temp_max']\n  const tempMin = weather['main']['temp_min']\n\n  return (\n    <div className='weather-right'>\n      <div className='weather-right-upper-row'>\n        {forecastFiltered.map((array, index) => {\n          return (\n            <SmallCard\n              key={index}\n              day={array['dt_txt'].substring(5, 10)}\n              icon={array['weather'][0]['icon']}\n              temp={array['main']['temp']}\n            />\n          )\n        })}\n      </div>\n      <h1>Today's hightlights</h1>\n      <div className='weather-right-lower-row'>\n        <BigCard title='Sunrise/Sunset' first={sunrise} second={sunset} />\n        <BigCard\n          title='Windspeed'\n          first={windspeed + ' m/s'}\n          second={winddeg + ' deg'}\n        />\n        <BigCard\n          title='Max/Min temperature'\n          first={(tempMax - 273.15).toFixed(1) + ' C'}\n          second={(tempMin - 273.15).toFixed(1) + ' C'}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction SmallCard({ day, icon, temp }) {\n  return (\n    <div className='small-card'>\n      <b>{day}</b>\n      <img\n        src={`http://openweathermap.org/img/wn/${icon}.png`}\n        alt='Weather icon'\n      />\n      <b>{(temp - 273.15).toFixed(1)} C</b>\n    </div>\n  )\n}\n\nfunction BigCard({ title, first, second }) {\n  return (\n    <div className='big-card'>\n      <b>{title}</b>\n      <b>{first}</b>\n      <b>{second}</b>\n    </div>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport Weather from './weather'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Weather />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/city.a26609a9.jpg\";"],"sourceRoot":""}